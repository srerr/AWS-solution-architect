#AWS EC2(Elastic Compute Cloud):
--------------------------------
->EC2 is a web service that provides resizable compute capacity in the cloud.
->It allows users to launch and manage virtual servers, known as instances, on-demand.
->EC2 is designed to make web-scale cloud computing easier for developers.

#AWS EC2 CLI Commands:
aws ec2 run-instances --image-id <ami-id> --count <number> --instance-type <instance-type> --key-name <key-name>
aws ec2 terminate-instances --instance-ids <instance-id>
aws ec2 describe-instances
aws ec2 start-instances --instance-ids <instance-id>
aws ec2 stop-instances --instance-ids <instance-id>
aws ec2 reboot-instances --instance-ids <instance-id>
aws ec2 create-snapshot --volume-id <volume-id> --description <description>
aws ec2 delete-snapshot --snapshot-id <snapshot-id>
aws ec2 describe-snapshots
aws ec2 create-volume --size <size> --availability-zone <az>
aws ec2 delete-volume --volume-id <volume-id>
aws ec2 describe-volumes
aws ec2 attach-volume --volume-id <volume-id> --instance-id <instance-id> --device <device>
aws ec2 detach-volume --volume-id <volume-id> --instance-id <instance-id>
aws ec2 create-key-pair --key-name <key-name>
aws ec2 delete-key-pair --key-name <key-name>
aws ec2 describe-key-pairs
aws ec2 create-security-group --group-name <group-name> --description <description>
aws ec2 delete-security-group --group-id <group-id>
aws ec2 describe-security-groups
aws ec2 authorize-security-group-ingress --group-id <group-id> --protocol <protocol> --port <port> --cidr <cidr>
aws ec2 revoke-security-group-ingress --group-id <group-id> --protocol <protocol> --port <port> --cidr <cidr>
aws ec2 describe-regions
aws ec2 describe-availability-zones

#AWS EC2 Instance Types:
--------------------------------
1. General Purpose:
   - T2, T3, T4g: Burstable performance instances.
   - M5, M6g: Balanced compute, memory, and networking resources.

2. Compute Optimized:
   - C5, C6g: High-performance processors for compute-intensive workloads.

3. Memory Optimized:
   - R5, R6g: Designed for memory-intensive applications.
   - X1, X2gd: High memory instances for SAP HANA and other large in-memory databases.

4. Storage Optimized:
   - I3, I3en: High disk throughput and IOPS for data-intensive workloads.
   - D2: Dense storage instances for large data sets.

5. Accelerated Computing:
   - P3, P4: GPU instances for machine learning and high-performance computing.
   - G4ad: GPU instances for graphics-intensive applications.
6. Bare Metal:
   - i3.metal, m5.metal: Provide direct access to the underlying hardware for applications that require it.
#AWS EC2 Pricing Models:
--------------------------------
1. On-Demand Instances:
   - Pay for compute capacity by the hour or second, with no long-term commitments.
   - Ideal for short-term, unpredictable workloads.

2. Reserved Instances:
   - Reserve capacity for a one- or three-year term, with significant discounts compared to on-demand pricing.
   - Suitable for steady-state workloads.

3. Spot Instances:
   - Bid on unused EC2 capacity at reduced rates.
   - Cost-effective for flexible, interruption-tolerant workloads.

4. Savings Plans:
   - Flexible pricing model offering significant savings on EC2 usage in exchange for a commitment to a consistent amount of usage (measured in $/hr) for a 1 or 3-year term.
5. Dedicated Hosts:
   - Physical servers dedicated to your use, providing more control over instance placement and compliance.
   - Useful for applications with specific licensing requirements.
#AWS EC2 Key Concepts:
--------------------------------
1. AMI (Amazon Machine Image):
   - A pre-configured template for launching EC2 instances, including the operating system, application server, and applications.

2. Instance Types:
   - Different configurations of CPU, memory, storage, and networking capacity to suit various workloads.

3. EBS (Elastic Block Store):
   - Persistent block storage for EC2 instances, allowing data to persist beyond the life of the instance.

4. Security Groups:
   - Virtual firewalls that control inbound and outbound traffic to EC2 instances.

5. Key Pairs:
   - Secure login credentials for EC2 instances, consisting of a public key (stored in AWS) and a private key (downloaded by the user).

6. VPC (Virtual Private Cloud):
   - A logically isolated section of the AWS cloud where users can define and control their virtual networking environment.
7. Elastic Load Balancing (ELB):
   - Automatically distributes incoming application traffic across multiple EC2 instances to ensure high availability and fault tolerance.
8. Auto Scaling:
   - Automatically adjusts the number of EC2 instances in response to changing demand, ensuring optimal performance and cost efficiency.
9. Placement Groups:
   - A logical grouping of instances within a single Availability Zone to meet specific performance requirements, such as low latency or high throughput.
10. Elastic IP Addresses:
    - Static IPv4 addresses designed for dynamic cloud computing, allowing users to mask instance failures by remapping the address to another instance.
11. Instance Metadata:
    - Data about the instance that can be accessed from within the instance itself, including instance ID, public IP address, and security group information.
12. Instance Store:
    - Temporary storage that is physically attached to the host computer, providing high I/O performance but data is lost when the instance is stopped or terminated.

#EC2 instance purchasing options or pricing models:
---------------------------------------------------
1. On-Demand Instances:
   - Pay for compute capacity by the hour or second, with no long-term commitments.
   - Ideal for short-term, unpredictable workloads.

2. Reserved Instances:
   - Reserve capacity for a one- or three-year term, with significant discounts compared to on-demand pricing.
   - Suitable for steady-state workloads.

3. Spot Instances:
   - Bid on unused EC2 capacity at reduced rates.
   - Cost-effective for flexible, interruption-tolerant workloads.

4. Savings Plans:
   - Flexible pricing model offering significant savings on EC2 usage in exchange for a commitment to a consistent amount of usage (measured in $/hr) for a 1 or 3-year term.
5. Dedicated Hosts:
   - Physical servers dedicated to your use, providing more control over instance placement and compliance.
   - Useful for applications with specific licensing requirements.

#AWS EC2 Instance Lifecycle:
--------------------------------
1. Launch:
   - Create a new EC2 instance from an AMI (Amazon Machine Image) with the desired instance type and configuration.

2. Running:
   - The instance is up and running, and you can connect to it via SSH or RDP, depending on the operating system.

3. Stopping:
   - You can stop an instance to save costs when it's not in use. The instance's state is saved, and you can start it again later.

4. Terminating:
   - When you no longer need an instance, you can terminate it. This permanently deletes the instance and its associated resources.

5. Rebooting:
   - You can reboot an instance without stopping it, which can be useful for applying updates or changes.

6. Monitoring:
   - Use Amazon CloudWatch to monitor the instance's performance, including CPU usage, memory usage, and disk I/O.

7. Scaling:
   - You can scale your EC2 instances up or down based on demand, either manually or using Auto Scaling groups.

8. Backing Up:
   - Create snapshots of your EBS volumes for backup and recovery purposes.

9. Patching:
   - Regularly update and patch your instances to ensure security and performance.

10. Security:
    - Implement security best practices, such as using security groups, IAM roles, and encryption.

#AWS EC2 Instance Metadata:
--------------------------------
- Instance metadata is data about your instance that you can use to configure or manage the instance.
- You can access instance metadata from within the instance using the following URL:
  - http://169.254.169.254/latest/meta-data/
- Commonly used instance metadata includes:
  - Instance ID
  - AMI ID
  - Instance type
  - Public IP address
  - Private IP address
  - Security group information
- Instance metadata is useful for:
  - Customizing instance behavior at startup
  - Gathering information about the instance for monitoring or management
  - Automating tasks based on instance attributes

#AWS Elastic IP Addresses:
--------------------------------
- Elastic IP addresses are static IPv4 addresses designed for dynamic cloud computing.
- They allow you to mask instance failures by remapping the address to another instance.
- Elastic IP addresses are associated with your AWS account, not a specific instance.
- You can allocate and release Elastic IP addresses as needed.
- There is a small hourly charge for Elastic IP addresses that are not associated with a running instance.

#AWS EC2 placement groups:
--------------------------------
- Placement groups are a way to influence the placement of a group of interdependent instances to meet the needs of your workload.
- There are three types of placement groups:
  1. Cluster Placement Groups:
     - Packs instances close together in a single Availability Zone.
     - Ideal for high-performance computing (HPC) applications that require low latency and high throughput.
  2. Spread Placement Groups:
     - Distributes instances across underlying hardware to reduce the risk of simultaneous failures.
     - Suitable for critical applications that need to be isolated from each other.
  3. Partition Placement Groups:
     - Divides instances into logical partitions, with each partition running on separate hardware.
     - Useful for large distributed applications, such as Hadoop, that require high throughput and low latency.
#AWS elastic network interfaces (ENIs):
--------------------------------
- Elastic Network Interfaces (ENIs) are virtual network interfaces that can be attached to EC2 instances.
- They provide additional networking capabilities, such as:
  - Multiple IP addresses (primary and secondary)
  - Elastic IP addresses
  - Security groups
  - MAC addresses
- ENIs can be used for:
  - Creating a management network
  - Implementing network redundancy
  - Isolating different types of traffic
- You can create, attach, detach, and delete ENIs independently from the EC2 instances they are associated with.
